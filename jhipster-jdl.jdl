
/*
 * This is a microservice blog sample with Gateway and two microservice applications
 * This uses JHipster registry for service discovery and OIDC authentication
 */
 
application {
  config {
    baseName gateway
    packageName com.infor.gateway
    applicationType gateway
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    serviceDiscoveryType consul
    reactive true
    jhiPrefix infor
    cacheProvider no
  }
  entities Blog, Post, Tag, Product
}

application {
  config {
    baseName blog
    packageName com.infor.blog
    applicationType microservice
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    serviceDiscoveryType consul
    jhiPrefix infor
    enableHibernateCache false
    cacheProvider no
  }
  entities Blog, Post, Tag
}

application {
  config {
    baseName store
    packageName com.infor.store
    applicationType microservice
    authenticationType oauth2
    prodDatabaseType postgresql
    devDatabaseType postgresql
    enableHibernateCache false
    serviceDiscoveryType consul
    jhiPrefix infor
    cacheProvider no
    skipUserManagement true
  }
  entities Product
}

entity Blog {
  name String required minlength(3)
}

entity Post {
  title String required
  content TextBlob required
  date Instant required
}

entity Tag {
  name String required minlength(2)
}

entity Product {
  title String required
  price BigDecimal required min(0)
  image ImageBlob
}

relationship ManyToOne {
  Blog{user(login)} to User,
  Post{blog(name)} to Blog
}

relationship ManyToMany {
  Post{tag(name)} to Tag{post}
}

paginate Post, Tag with infinite-scroll
paginate Product with pagination

microservice Product with store
microservice Blog, Post, Tag with blog
